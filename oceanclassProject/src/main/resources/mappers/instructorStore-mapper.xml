<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="inStoreMapper">

	<resultMap id="productResult" type="Product">
	  	<result column="pno" property="productNo"/>
	  	<result column="mno" property="memberNo"/>
	  	<result column="category" property="category"/>
	  	<result column="title" property="title"/>
	  	<result column="price" property="price"/>
	  	<result column="stock" property="stock"/>
	  	<result column="endate" property="enDate"/>
	  	<result column="courier" property="courier"/>
	  	<result column="soldout_yn" property="soldoutYN"/>
	  	<result column="status" property="status"/>
	  	<result column="img1" property="productImg0"/>
	  	<result column="img2" property="productImg1"/>
	  	<result column="img3" property="productImg2"/>
	 	<result column="img4" property="productImg3"/>
	</resultMap>
	
	<resultMap id="productOptionResult" type="ProductOption">
		<result column="opno" property="optionNo"/>
		<result column="pno" property="productNo"/>
		<result column="opname" property="optionName"/>
		<result column="price" property="price"/>
	</resultMap>
	
	<resultMap id="stockResult" type="Stock">
		<result column="pno" property="productNo" />
		<result column="title" property="productName" />
		<result column="stock" property="stockCount"/>
		<result column="orderCount" property="orderCount"/>
		<result column="soldout_yn" property="soldout"/>
		<result column="invalue" property="inValue" />
	</resultMap>
	
	<resultMap type="InProductOrder" id="pOrderResult">
		<result column="order_no" property="orderNo" />
		<result column="pno" property="productNo" />
		<result column="title" property="title"/>
		<result column="stock" property="stock"/>
		<result column="quantity" property="quantity"/>
		<result column="unit_price" property="unitPrice"/>
		<result column="total" property="total"/>
		<result column="order_site" property="orderSite"/>
		<result column="process" property="process"/>	
	</resultMap>
	
	<select id="selectListCount" resultType="_int">
		select
		       count(*)
		  from store
		 where status in ('Y', 'N')
	</select>
	
	<select id="selectList" resultMap="productResult" >
	 	select pno
		     , mno
		     , category
		     , title
		     , price
		     , status
		     , img1
		 from store
		where status in ('Y','N')
		order
		    by pno desc
	</select>
	  	
  	<insert id="insertProduct">
  		insert 
		  into STORE
		     (
		       pno
		     , mno
		     , category
		     , title
		     , price
		     , stock
		     , endate
		     , courier
		     , soldout_yn
		     , status
		     , img1
		     , img2
		     , img3
		     , img4
		     )
		 VALUES
		    (
		      SEQ_SNO.NEXTVAL
		    , #{memberNo}
		    , #{category}
		    , #{title}
		    , #{price}
		    , #{stock}
		    , sysdate
		    , #{courier}
		    , 'N'
		    , 'N'
		    , #{productImg0}
		    , #{productImg1}
		    , #{productImg2}
		    , #{productImg3}
		    ) 
  	</insert>
  	
  	<insert id="insertProductOption">
  		insert 
		  into SOPTION
		     (
		       opno
		     , pno
		     , opname
		     , price
		     )
		 VALUES
		    (
		      SEQ_OPNO.NEXTVAL
		    , SEQ_SNO.CURRVAL
		    , #{optionName}
		    , #{price}
		    )
  	</insert>
  	
	<select id="selectProduct" resultMap="productResult">
  		select 
		       pno
		     , mno
		     , category
		     , title
		     , price
		     , stock
		     , to_char(endate, 'YYYY-MM-DD') endate
		     , courier
		     , soldout_yn
		     , status
		     , img1
		     , img2
		     , img3
		     , img4
		  from store
		 where pno = #{pno}
  	</select>
  	
  	<select id="selectProductOption" resultMap="productOptionResult">
	  	select 
		       opno
		     , pno
		     , opname
		     , price
		  from soption
		 where pno = #{productNo}
  	</select>
  	
  	<update id="updateProduct">
  		update store
		   set  category = #{category}
		      , title = #{title}
		      , price = #{price}
		      , courier = #{courier}
		      , img1 = #{productImg0}
		      , img2 = #{productImg1}
		      , img3 = #{productImg2}
		      , img4 = #{productImg3}
		 where pno = #{productNo}
  	</update>
  	
  	<update id="updateProductOption">
  		update soption
		   set  opname = #{optionName}
		      , price = #{price}
		 where opno = #{optionNo}
  	</update>
  	
  	<insert id="upinsertProductOption">
  		insert 
		  into SOPTION
		     (
		       opno
		     , pno
		     , opname
		     , price
		     )
		 VALUES
		    (
		      SEQ_OPNO.NEXTVAL
		    , #{productNo}
		    , #{optionName}
		    , #{price}
		    )
  	</insert>
  	
  	<update id="deleteProduct">
  		update store
		   set status = 'D'
		 where pno = #{pno}
  	</update>
  	
  	<delete id="deleteProductOption">
  		delete 
		  from soption 
		 where pno = #{pno} 
  	</delete>
  	
  	<select id="selectStockCount" resultType="_int">
		select
		       count(*)
		  from store
		 where status = 'Y'
	</select>
	
	<select id="selectStockList" resultMap="stockResult">
		select 
		       store.pno
		     , title
		     , stock
		     , nvl(a.ordercount, 0) orderCount
		     , soldout_YN
		  from store
		 left join 
		      (
		        select 
		                pno
		              , count(*) orderCount
		          from 
		              (
		                select 
		                       pay.order_no
		                     , s.pno
		                     , title
		                  from pay
		                  left join s_buylist s on (pay.order_no = s.order_no)
		                  join store on s.pno = store.pno
		                 where pay.order_status in (1,2)
		              ) a
		          group by pno
		      ) a on a.pno = store.pno
		  where status = 'Y'
		  order
		    by pno desc
	</select>
  	
  	<update id="updateStockCount">
  		update store
		   set stock = stock+#{inValue} 
		     , soldout_yn = #{soldout}
		 where pno = #{productNo}
  	</update>
  	
  	<select id="selectProductList" resultMap="productResult">
  		select
		       pno
		     , title
		     , stock
		  from store
		 where status = 'Y'
		 order
		    by pno desc
  	</select>
  	
  	<insert id="insertProductOrder">
  		insert 
		  into s_order
		      (
		        order_no
		      , pno
		      , title
		      , stock
		      , quantity
		      , unit_price
		      , total
		      , order_site
		      )
		 values
		      (
		        SEQ_SIONO.nextval
		      , #{productNo}
		      , #{title}
		      , #{stock}
		      , #{quantity}
		      , #{unitPrice}
		      , #{total}
		      , #{orderSite}
		      )
  	</insert>
</mapper>
